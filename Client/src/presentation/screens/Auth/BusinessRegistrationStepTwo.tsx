import Logo from "@/src/presentation/components/Auth/Logo/Logo";
import Province from "@/src/presentation/components/Auth/Province/Province";
import SelectImage from "@/src/presentation/components/Auth/SelectImage/SelectImage";
import SelectIndustry from "@/src/presentation/components/Auth/SelectIndustry/SelectIndustry";
import { ColorMain } from "@/src/presentation/components/colors";
import { useAppNavigation } from "@/src/presentation/Hooks/useAppNavigation";
import { stylesAuth } from "@/src/presentation/screens/Auth/Styles";
import { BusinessInforAuth } from "@/src/services/API/profileService";
import { TokenStorage } from "@/src/utils/tokenStorage";
import { Label } from "@react-navigation/elements";
import { CommonActions } from "@react-navigation/native";
import axios from "axios";
import { useEffect, useState } from "react";
import {
  ActivityIndicator,
  Alert,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from "react-native";
import { TextInput } from "react-native-paper";
import { DatePickerInput } from "react-native-paper-dates";

function BusinessRegistrationStepTwo({ navigation }: Props) {
  const navigate = useAppNavigation();
  const [inputDate, setInputDate] = useState<Date | undefined>(undefined);
  const [loading, setLoading] = useState(false);

  const [provinceList, setProvinceList] = useState<
    { label: string; value: string }[]
  >([]);
  const [selectedProvince, setSelectedProvince] = useState<string | null>(null);
  const [selectedDistrict, setSelectedDistrict] = useState<string | null>(null);
  const [taxCode, setTaxcode] = useState<string | null>(null);

  const [formData, setFormData] = useState<FormDataType>({
    businessName: "",
    businessType: "",
    taxCode: "",
    address: {
      city: null,
      district: null,
      ward: "Nh√†",
      street: "Ngo√†i ƒê∆∞·ªùng",
    },
    phoneNumber: "",
    industry: "ƒÇn u·ªëng",
  });

  console.log(formData);

  const handleSubmitInfoBuss = async () => {
    const {
      businessName,
      businessType,
      taxCode,
      address,
      phoneNumber,
      industry,
    } = formData;

    // Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
    if (
      !businessName.trim() ||
      !businessType.trim() ||
      !taxCode.trim() ||
      !phoneNumber.trim() ||
      !industry.trim() ||
      !address.city ||
      !address.district
    ) {
      Alert.alert(
        "Thi·∫øu th√¥ng tin",
        "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ c√°c tr∆∞·ªùng b·∫Øt bu·ªôc."
      );
      return;
    }

    setLoading(true);
    try {
      await BusinessInforAuth(formData);
      setLoading(false);
      navigate.navigate("NavigationBusiness");
    } catch (error: any) {
      setLoading(false);
      Alert.alert("X√°c minh th·∫•t b·∫°i", error?.message || "C√≥ l·ªói x·∫£y ra.");
    }
  };

  return (
    <ScrollView
      keyboardShouldPersistTaps="handled"
      contentContainerStyle={{ paddingHorizontal: 10 }}
    >
      <View style={stylesBST.container}>
        <View style={stylesAuth.wrapLogin}>
          <Logo widthLogo={40} heightLogo={35} />
          <View style={{ flex: 1, width: "100%", marginTop: 30 }}>
            <Text style={stylesBST.label}>
              X√°c minh th√¥ng tin h·ªô kinh doanh
            </Text>
            <View style={{ width: "100%", marginTop: 50 }}>
              <Text style={stylesBST.labelInput}>
                T√™n h·ªô kinh doanh
                <Text style={{ color: "red", fontWeight: "500" }}>*</Text>
              </Text>
              <TextInput
                label="Nh·∫≠p ƒë√∫ng theo gi·∫•y ph√©p ƒêKKD..."
                style={stylesBST.input}
                // onChangeText={setCode}
                // underlineColor={ColorMain}
                // activeUnderlineColor={ColorMain}
                theme={{
                  colors: {
                    onSurfaceVariant: "#9d9d9d",
                  },
                }}
                onChangeText={(val) =>
                  setFormData((prev) => ({ ...prev, businessName: val }))
                }
              />
            </View>
            <View style={{ width: "100%", marginTop: 10 }}>
              <Text style={stylesBST.labelInput}>
                S·ªë ƒëi·ªán tho·∫°i
                <Text style={{ color: "red", fontWeight: "500" }}> *</Text>
              </Text>
              <TextInput
                label="S·ªë ƒëi·ªán tho·∫°i kinh doanh"
                style={stylesBST.input}
                // underlineColor={ColorMain}
                // activeUnderlineColor={ColorMain}
                placeholderTextColor={"#fff"}
                onChangeText={(val) =>
                  setFormData((prev) => ({ ...prev, phoneNumber: val }))
                }
                theme={{
                  colors: {
                    onSurfaceVariant: "#9d9d9d",
                    primary: ColorMain,
                    text: "#000",
                  },
                }}
              />
            </View>
            <View style={{ width: "100%", marginTop: 10 }}>
              <Text style={stylesBST.labelInput}>
                M√£ h·ªô kinh doanh (M√£ s·ªë thu·∫ø)
                <Text style={{ color: "red", fontWeight: "500" }}>*</Text>
              </Text>
              <TextInput
                label="Do c∆° quan thu·∫ø c·∫•p..."
                style={stylesBST.input}
                // underlineColor={ColorMain}
                // activeUnderlineColor={ColorMain}
                placeholderTextColor={"#fff"}
                onChangeText={(val) =>
                  setFormData((prev) => ({ ...prev, taxCode: val }))
                }
                theme={{
                  colors: {
                    onSurfaceVariant: "#9d9d9d",
                    primary: ColorMain,
                    text: "#000",
                  },
                }}
              />
            </View>

            {/* <View style={{ width: "100%", marginTop: 10, height: 80 }}>
              <Label style={stylesBST.labelInput}>Ng√†y c·∫•p:</Label>
              <DatePickerInput
                locale="en"
                label="Tr√™n gi·∫•y ph√©p ƒêKKD..."
                value={inputDate}
                onChange={(d) => setInputDate(d)}
                inputMode="start"
                style={{ backgroundColor: "#fff" }}
                theme={{
                  colors: {
                    primary: ColorMain, // üîµ M√†u label v√† outline khi focus
                    text: "#000", // üñãÔ∏è M√†u n·ªôi dung g√µ v√†o
                    onSurfaceVariant: "#9d9d9d",
                  },
                }}
              />
            </View> */}

            <View style={{ marginTop: 16 }}>
              <Text style={stylesBST.labelInput}>
                ƒê·ªãa ch·ªâ
                <Text style={{ color: "red", fontWeight: "500" }}> *</Text>
              </Text>
              <Province
                selectedProvince={selectedProvince}
                setSelectedProvince={setSelectedProvince}
                selectedDistrict={selectedDistrict}
                setSelectedDistrict={setSelectedDistrict}
                setProvinceList={setProvinceList}
                provinceList={provinceList}
                setFormData={setFormData}
              />
            </View>

            <View style={{ marginTop: 30 }}>
              <Text style={stylesBST.labelInput}>
                Ng√†nh ngh·ªÅ kinh doanh
                <Text style={{ color: "red", fontWeight: "500" }}> *</Text>
              </Text>
              <SelectIndustry setFormData={setFormData} />
            </View>

            {/* <View style={{ width: "100%", marginTop: 30 }}>
              <Label style={stylesBST.labelInput}>
                S·ªë gi·∫•y ph√©p kinh doanh / ƒëƒÉng k√Ω kinh doanh:
              </Label>
              <TextInput
                label="Nh·∫≠p s·ªë GPKD/DKKD"
                style={stylesBST.input}
                underlineColor={ColorMain}
                activeUnderlineColor={ColorMain}
                theme={{
                  colors: {
                    primary: ColorMain, // m√†u khi focus
                    text: "#000", // m√†u n·ªôi dung
                    placeholder: "#9d9d9d", // üî• ch√≠nh l√† label khi ch∆∞a focus
                    onSurfaceVariant: "#9d9d9d",
                  },
                }}
              />
            </View>
            <View style={{ width: "100%", marginTop: 30 }}>
              <Label style={stylesBST.labelInput}>
                ·∫¢nh ch·ª•p GPKD (File upload m·∫∑t tr∆∞·ªõc/ƒë·ªß trang)
              </Label>
              <SelectImage />
            </View> */}
            <View style={{ width: "100%", alignItems: "flex-end" }}>
              <TouchableOpacity
                style={[stylesBST.btn, { marginTop: 30 }]}
                // onPress={() =>
                //   // navigate.navigate("BusinessRegistrationStepThree", {
                //   //   taxCode: taxCode,
                //   // })
                //   navigate.navigate("NavigationBusiness")
                // }
                onPress={handleSubmitInfoBuss}
              >
                <Text style={stylesAuth.textBtnLogin}>
                  {loading ? <ActivityIndicator color="#fff" /> : "Ti·∫øp theo"}
                </Text>
              </TouchableOpacity>
            </View>
          </View>
        </View>
      </View>
    </ScrollView>
  );
}

const stylesBST = StyleSheet.create({
  container: {
    flex: 1,
    width: "100%",
    paddingBottom: 50,
  },
  input: {
    fontSize: 16,
    marginBottom: 15,
    backgroundColor: "#fff",
    shadowColor: ColorMain,
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.22,
    width: "100%",
    marginTop: 5,
    borderRadius: 8,
  },
  label: {
    width: "100%",
    textAlign: "center",
    fontSize: 20,
    fontWeight: 500,
    color: ColorMain,
  },
  labelInput: {
    textAlign: "left",
    fontWeight: 400,
    fontSize: 15,
  },
  btn: {
    backgroundColor: ColorMain,
    height: 50,
    borderRadius: 50,
    justifyContent: "center",
    alignItems: "center",
    width: "40%",
  },
});
export default BusinessRegistrationStepTwo;
