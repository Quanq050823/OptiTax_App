import { ColorMain } from "@/src/presentation/components/colors";
import { useState } from "react";
import { StyleSheet } from "react-native";
import { Dropdown } from "react-native-element-dropdown";
const data = [
	// üî∞ 1. D·ªãch v·ª• ƒÉn u·ªëng
	{
		label: "Qu√°n ƒÉn, nh√† h√†ng",
		value: "food_restaurant",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "Qu√°n c√† ph√™, tr√† s·ªØa",
		value: "cafe_tea",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "B√°n ƒë·ªì ƒÉn nhanh, th·ª©c ƒÉn v·ªâa h√®",
		value: "fast_street_food",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "D·ªãch v·ª• ƒë·∫∑t ti·ªác, n·∫•u ƒÉn t·∫°i nh√†",
		value: "catering_home",
		taxType: "SERVICE_WITH_MATERIAL",
	},

	// üî∞ 2. B√°n l·∫ª h√†ng h√≥a
	{ label: "T·∫°p h√≥a", value: "grocery", taxType: "GOODS_SUPPLY" },
	{
		label: "Shop th·ªùi trang, qu·∫ßn √°o, gi√†y d√©p",
		value: "fashion_shop",
		taxType: "GOODS_SUPPLY",
	},
	{
		label: "C·ª≠a h√†ng ƒëi·ªán tho·∫°i, linh ki·ªán",
		value: "mobile_store",
		taxType: "GOODS_SUPPLY",
	},
	{
		label: "B√°n ƒë·ªì gia d·ª•ng, n·ªôi th·∫•t",
		value: "household_goods",
		taxType: "GOODS_SUPPLY",
	},
	{
		label: "Hi·ªáu thu·ªëc (theo ƒëi·ªÅu ki·ªán h√†nh ngh·ªÅ)",
		value: "pharmacy",
		taxType: "GOODS_SUPPLY",
	},

	// üî∞ 3. S·∫£n xu·∫•t ‚Äì ch·∫ø bi·∫øn th·ªß c√¥ng
	{
		label: "S·∫£n xu·∫•t b√°nh k·∫πo, th·ª±c ph·∫©m kh√¥",
		value: "food_production",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "Gia c√¥ng ƒë·ªì g·ªó, s·∫Øt, c∆° kh√≠ nh·ªè",
		value: "handcraft_metal_wood",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "D·ªát may, th√™u th√πa, ƒëan l√°t th·ªß c√¥ng",
		value: "textile_handcraft",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "L√†m nem, gi√≤ ch·∫£, m·∫Øm‚Ä¶",
		value: "traditional_food",
		taxType: "SERVICE_WITH_MATERIAL",
	},

	// üî∞ 4. D·ªãch v·ª• c√° nh√¢n
	{
		label: "C·∫Øt t√≥c, l√†m t√≥c, nail, spa",
		value: "personal_beauty",
		taxType: "SERVICE_NO_MATERIAL",
	},
	{
		label: "Gi·∫∑t ·ªßi, s·ª≠a ch·ªØa ƒë·ªì gia d·ª•ng",
		value: "laundry_repair",
		taxType: "SERVICE_NO_MATERIAL",
	},
	{
		label: "S·ª≠a xe, r·ª≠a xe m√°y/√¥ t√¥",
		value: "vehicle_service",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "Gi·ªØ tr·∫ª, tr√¥ng tr·∫ª t·∫°i nh√†",
		value: "babysitting",
		taxType: "SERVICE_NO_MATERIAL",
	},

	// üî∞ 5. D·ªãch v·ª• v·∫≠n t·∫£i & giao nh·∫≠n
	{
		label: "Giao h√†ng (shipper)",
		value: "delivery",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "Xe √¥m c√¥ng ngh·ªá",
		value: "motor_taxi",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "V·∫≠n t·∫£i h√†ng h√≥a nh·ªè",
		value: "freight_transport",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "Cho thu√™ xe, xe du l·ªãch",
		value: "car_rental",
		taxType: "SERVICE_NO_MATERIAL",
	},

	// üî∞ 6. Gi√°o d·ª•c & ƒë√†o t·∫°o
	{ label: "Gia s∆∞", value: "tutor", taxType: "SERVICE_NO_MATERIAL" },
	{
		label: "Trung t√¢m d·∫°y th√™m, h·ªçc ngo·∫°i ng·ªØ",
		value: "education_center",
		taxType: "SERVICE_NO_MATERIAL",
	},
	{
		label: "D·∫°y ngh·ªÅ: tin h·ªçc, k·∫ø to√°n, l√†m ƒë·∫πp‚Ä¶",
		value: "vocational_training",
		taxType: "SERVICE_NO_MATERIAL",
	},

	// üî∞ 7. N√¥ng nghi·ªáp ‚Äì chƒÉn nu√¥i
	{
		label: "Tr·ªìng rau, c√¢y c·∫£nh (b√°n t·∫°i ch·ª£)",
		value: "farming_plants",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "ChƒÉn nu√¥i nh·ªè l·∫ª: g√†, v·ªãt, l·ª£n‚Ä¶",
		value: "small_livestock",
		taxType: "SERVICE_WITH_MATERIAL",
	},
	{
		label: "Kinh doanh n√¥ng s·∫£n, v·∫≠t t∆∞ n√¥ng nghi·ªáp",
		value: "agriculture_trade",
		taxType: "GOODS_SUPPLY",
	},

	// üî∞ 8. Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠
	{
		label: "B√°n h√†ng online (Facebook, Shopee‚Ä¶)",
		value: "online_selling",
		taxType: "GOODS_SUPPLY",
	},
	{
		label: "Kinh doanh livestream",
		value: "livestream_business",
		taxType: "OTHER_BUSINESS",
	},
	{ label: "Dropshipping", value: "dropshipping", taxType: "OTHER_BUSINESS" },
];

type Industry = {
	setFormData: React.Dispatch<React.SetStateAction<FormDataType>>;
};

function SelectIndustry({ setFormData }: Industry) {
	const [value, setValue] = useState<string | null>(null);
	const [isFocus, setIsFocus] = useState(false);
	return (
		<Dropdown
			style={[styleSelect.dropdown, isFocus && { borderColor: "#5A67D8" }]}
			placeholderStyle={styleSelect.placeholderStyle}
			selectedTextStyle={styleSelect.selectedTextStyle}
			inputSearchStyle={styleSelect.inputSearchStyle}
			iconStyle={styleSelect.iconStyle}
			data={data}
			search
			dropdownPosition="top"
			maxHeight={300}
			labelField="label"
			valueField="value"
			placeholder={!isFocus ? "Ch·ªçn ng√†nh ngh·ªÅ kinh doanh" : "..."}
			searchPlaceholder="T√¨m ki·∫øm..."
			value={value}
			onFocus={() => setIsFocus(true)}
			onBlur={() => setIsFocus(false)}
			onChange={(item) => {
				setValue(item.value);
				setIsFocus(false);
				setFormData((prev) => ({
					...prev,
					businessType: item.label,
					taxType: item.taxType,
				}));
			}}
		/>
	);
}

const styleSelect = StyleSheet.create({
	inputSearchStyle: {
		height: 40,
		fontSize: 16,
	},
	iconStyle: {
		width: 20,
		height: 20,
	},
	dropdown: {
		height: 50,
		borderRadius: 8,
		paddingHorizontal: 16,
		backgroundColor: "#fff",
		elevation: 2,
		marginTop: 7,
		shadowColor: ColorMain,
		shadowOffset: { width: 0, height: 1 },
		shadowOpacity: 0.22,
	},
	placeholderStyle: {
		color: "#999",
	},
	selectedTextStyle: {
		color: "#000",
	},
});
export default SelectIndustry;
