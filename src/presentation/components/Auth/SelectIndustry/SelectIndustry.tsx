import { useState } from "react";
import { StyleSheet } from "react-native";
import { Dropdown } from "react-native-element-dropdown";

const data = [
  // üî∞ 1. D·ªãch v·ª• ƒÉn u·ªëng
  { label: "Qu√°n ƒÉn, nh√† h√†ng", value: "food_restaurant" },
  { label: "Qu√°n c√† ph√™, tr√† s·ªØa", value: "cafe_tea" },
  { label: "B√°n ƒë·ªì ƒÉn nhanh, th·ª©c ƒÉn v·ªâa h√®", value: "fast_street_food" },
  { label: "D·ªãch v·ª• ƒë·∫∑t ti·ªác, n·∫•u ƒÉn t·∫°i nh√†", value: "catering_home" },

  // üî∞ 2. B√°n l·∫ª h√†ng h√≥a
  { label: "T·∫°p h√≥a", value: "grocery" },
  { label: "Shop th·ªùi trang, qu·∫ßn √°o, gi√†y d√©p", value: "fashion_shop" },
  { label: "C·ª≠a h√†ng ƒëi·ªán tho·∫°i, linh ki·ªán", value: "mobile_store" },
  { label: "B√°n ƒë·ªì gia d·ª•ng, n·ªôi th·∫•t", value: "household_goods" },
  { label: "Hi·ªáu thu·ªëc (theo ƒëi·ªÅu ki·ªán h√†nh ngh·ªÅ)", value: "pharmacy" },

  // üî∞ 3. S·∫£n xu·∫•t ‚Äì ch·∫ø bi·∫øn th·ªß c√¥ng
  { label: "S·∫£n xu·∫•t b√°nh k·∫πo, th·ª±c ph·∫©m kh√¥", value: "food_production" },
  { label: "Gia c√¥ng ƒë·ªì g·ªó, s·∫Øt, c∆° kh√≠ nh·ªè", value: "handcraft_metal_wood" },
  { label: "D·ªát may, th√™u th√πa, ƒëan l√°t th·ªß c√¥ng", value: "textile_handcraft" },
  { label: "L√†m nem, gi√≤ ch·∫£, m·∫Øm‚Ä¶", value: "traditional_food" },

  // üî∞ 4. D·ªãch v·ª• c√° nh√¢n
  { label: "C·∫Øt t√≥c, l√†m t√≥c, nail, spa", value: "personal_beauty" },
  { label: "Gi·∫∑t ·ªßi, s·ª≠a ch·ªØa ƒë·ªì gia d·ª•ng", value: "laundry_repair" },
  { label: "S·ª≠a xe, r·ª≠a xe m√°y/√¥ t√¥", value: "vehicle_service" },
  { label: "Gi·ªØ tr·∫ª, tr√¥ng tr·∫ª t·∫°i nh√†", value: "babysitting" },

  // üî∞ 5. D·ªãch v·ª• v·∫≠n t·∫£i & giao nh·∫≠n
  { label: "Giao h√†ng (shipper)", value: "delivery" },
  { label: "Xe √¥m c√¥ng ngh·ªá", value: "motor_taxi" },
  { label: "V·∫≠n t·∫£i h√†ng h√≥a nh·ªè", value: "freight_transport" },
  { label: "Cho thu√™ xe, xe du l·ªãch", value: "car_rental" },

  // üî∞ 6. Gi√°o d·ª•c & ƒë√†o t·∫°o
  { label: "Gia s∆∞", value: "tutor" },
  { label: "Trung t√¢m d·∫°y th√™m, h·ªçc ngo·∫°i ng·ªØ", value: "education_center" },
  {
    label: "D·∫°y ngh·ªÅ: tin h·ªçc, k·∫ø to√°n, l√†m ƒë·∫πp‚Ä¶",
    value: "vocational_training",
  },

  // üî∞ 7. N√¥ng nghi·ªáp ‚Äì chƒÉn nu√¥i
  { label: "Tr·ªìng rau, c√¢y c·∫£nh (b√°n t·∫°i ch·ª£)", value: "farming_plants" },
  { label: "ChƒÉn nu√¥i nh·ªè l·∫ª: g√†, v·ªãt, l·ª£n‚Ä¶", value: "small_livestock" },
  {
    label: "Kinh doanh n√¥ng s·∫£n, v·∫≠t t∆∞ n√¥ng nghi·ªáp",
    value: "agriculture_trade",
  },

  // üî∞ 8. Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠
  { label: "B√°n h√†ng online (Facebook, Shopee‚Ä¶)", value: "online_selling" },
  { label: "Kinh doanh livestream", value: "livestream_business" },
  { label: "Dropshipping", value: "dropshipping" },
];
function SelectIndustry() {
  const [value, setValue] = useState<string | null>(null);
  const [isFocus, setIsFocus] = useState(false);
  return (
    <Dropdown
      style={[styleSelect.dropdown, isFocus && { borderColor: "#5A67D8" }]}
      placeholderStyle={styleSelect.placeholderStyle}
      selectedTextStyle={styleSelect.selectedTextStyle}
      inputSearchStyle={styleSelect.inputSearchStyle}
      iconStyle={styleSelect.iconStyle}
      data={data}
      search
      maxHeight={300}
      labelField="label"
      valueField="value"
      placeholder={!isFocus ? "Ch·ªçn ng√†nh ngh·ªÅ kinh doanh" : "..."}
      searchPlaceholder="T√¨m ki·∫øm..."
      value={value}
      onFocus={() => setIsFocus(true)}
      onBlur={() => setIsFocus(false)}
      onChange={(item) => {
        setValue(item.value);
        setIsFocus(false);
      }}
    />
  );
}

const styleSelect = StyleSheet.create({
  inputSearchStyle: {
    height: 40,
    fontSize: 16,
  },
  iconStyle: {
    width: 20,
    height: 20,
  },
  dropdown: {
    height: 50,
    borderRadius: 8,
    paddingHorizontal: 16,
    backgroundColor: "#fff",
    shadowColor: "#000",
    elevation: 2,
    marginTop: 7,
  },
  placeholderStyle: {
    color: "#999",
  },
  selectedTextStyle: {
    color: "#000",
  },
});
export default SelectIndustry;
